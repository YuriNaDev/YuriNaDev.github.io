{"version":3,"file":"component---src-templates-post-list-template-tsx-cef3019a79135e1e7686.js","mappings":"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","sources":["webpack://yrnana.github.io/./src/components/post/Comments.tsx","webpack://yrnana.github.io/./src/components/post/Pagination.tsx","webpack://yrnana.github.io/./src/components/post/Post.tsx","webpack://yrnana.github.io/./src/components/post/PostListItem.tsx","webpack://yrnana.github.io/./src/components/post/PostList.tsx","webpack://yrnana.github.io/./src/components/post/PostNav.tsx","webpack://yrnana.github.io/./src/templates/PostListTemplate.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nexport const Comments: React.VFC<{ id: string }> = ({ id }) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      // add utteranc comment\n      const script = document.createElement('script');\n      script.setAttribute('src', 'https://utteranc.es/client.js');\n      script.setAttribute('repo', 'yrnana/yrnana.github.io');\n      script.setAttribute('issue-term', id);\n      script.setAttribute('label', 'comment');\n      script.setAttribute('theme', 'github-light');\n      script.setAttribute('crossorigin', 'anonymous');\n      script.setAttribute('async', 'true');\n      container.appendChild(script);\n      return () => {\n        container.innerHTML = '';\n      };\n    }\n  }, [id]);\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"mt-20 relative\"\n      style={{ minHeight: 269 }}\n    />\n  );\n};\n\nComments.displayName = 'Comments';\n","import { useMemo } from 'react';\nimport cx from 'classnames';\nimport { graphql, Link } from 'gatsby';\nimport { LeftIcon, RightIcon } from '~/components/common';\n\nconst pageItemClassName = 'w-10 py-2 text-center';\nconst iconClassName = 'flex justify-center';\n\nexport const Pagination: React.VFC<PaginationFragment> = ({\n  currentPage,\n  pageCount,\n  hasPreviousPage,\n  hasNextPage,\n}) => {\n  const pages = useMemo(\n    () => getPagination(currentPage, pageCount),\n    [currentPage, pageCount],\n  );\n\n  return (\n    <div className=\"flex flex-row flex-nowrap items-center justify-center mt-8\">\n      {hasPreviousPage ? (\n        <Link\n          to={`/page/${currentPage - 1}`}\n          className={cx(pageItemClassName, iconClassName)}\n        >\n          <LeftIcon />\n        </Link>\n      ) : (\n        <div className={cx('text-slate-300', pageItemClassName, iconClassName)}>\n          <LeftIcon />\n        </div>\n      )}\n      {pages.map((item, i) => (\n        <PaginationItem key={`${item.page}_${i}`} {...item} />\n      ))}\n      {hasNextPage ? (\n        <Link\n          to={`/page/${currentPage + 1}`}\n          className={cx(pageItemClassName, iconClassName)}\n        >\n          <RightIcon />\n        </Link>\n      ) : (\n        <div className={cx('text-slate-300', pageItemClassName, iconClassName)}>\n          <RightIcon />\n        </div>\n      )}\n    </div>\n  );\n};\n\ninterface PaginationItemProps {\n  page: string | number;\n  isPage: boolean;\n  isCurrentPage: boolean;\n}\n\nconst PaginationItem: React.VFC<PaginationItemProps> = ({\n  page,\n  isPage,\n  isCurrentPage,\n}) => {\n  if (isPage && !isCurrentPage) {\n    return (\n      <Link to={`/page/${page}`} className={pageItemClassName}>\n        {page}\n      </Link>\n    );\n  }\n  return (\n    <div\n      className={cx(pageItemClassName, 'cursor-default', {\n        'text-violet-500': isCurrentPage,\n      })}\n    >\n      {page}\n    </div>\n  );\n};\n\nfunction getPagination(\n  currentPage: number,\n  pageCount: number,\n): PaginationItemProps[] {\n  if (pageCount <= 7) {\n    return Array.from({ length: pageCount }, (_, n) => ({\n      isPage: true,\n      isCurrentPage: n + 1 === currentPage,\n      page: n + 1,\n    }));\n  }\n\n  let pages: (number | string)[];\n  if (currentPage <= 4) {\n    pages = [1, 2, 3, 4, 5, '…', pageCount];\n  } else if (currentPage >= pageCount - 3) {\n    pages = [\n      1,\n      '…',\n      pageCount - 4,\n      pageCount - 3,\n      pageCount - 2,\n      pageCount - 1,\n      pageCount,\n    ];\n  } else {\n    pages = [\n      1,\n      '…',\n      currentPage - 1,\n      currentPage,\n      currentPage + 1,\n      '…',\n      pageCount,\n    ];\n  }\n  return pages.map((p) => ({\n    isPage: typeof p === 'number',\n    isCurrentPage: p === currentPage,\n    page: p,\n  }));\n}\n\nexport const paginationFragment = graphql`\n  fragment Pagination on PageInfo {\n    currentPage\n    pageCount\n    hasNextPage\n    hasPreviousPage\n  }\n`;\n","import { graphql } from 'gatsby';\nimport { GatsbyImage, getImage, ImageDataLike } from 'gatsby-plugin-image';\nimport { Tag } from '~/components/tag';\nimport { formatDate, renderAst } from '~/helpers/utils';\n\nexport const Post: React.VFC<PostItemFragment> = ({ frontmatter, htmlAst }) => {\n  const { title, date, preview, tags } = frontmatter!;\n\n  return (\n    <article className=\"mb-20\">\n      <header className=\"text-center mt-10 mb-20\">\n        {preview && (\n          <GatsbyImage\n            image={getImage(preview as ImageDataLike)!}\n            alt={title}\n            className=\"mb-10\"\n          />\n        )}\n        <h1 className=\"text-3xl font-semibold\">{title}</h1>\n        <div className=\"text-slate-500 mt-4\">{formatDate(date)}</div>\n        {tags && (\n          <div className=\"flex flex-row flex-wrap justify-center space-x-3 mt-4\">\n            {tags.map((tag) => (\n              <Tag key={tag} name={tag} color=\"violet\" />\n            ))}\n          </div>\n        )}\n      </header>\n      <div className=\"markdown\">{renderAst(htmlAst)}</div>\n    </article>\n  );\n};\n\nexport const postItemFragment = graphql`\n  fragment PostItem on MarkdownRemark {\n    htmlAst\n    excerpt(pruneLength: 150, truncate: true)\n    frontmatter {\n      title\n      date\n      tags\n      excerpt\n      preview {\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED, placeholder: BLURRED)\n        }\n      }\n    }\n  }\n`;\n","import { graphql, Link } from 'gatsby';\nimport { Tag } from '~/components/tag';\nimport { formatDate, renderAst } from '~/helpers/utils';\n\nexport const PostListItem: React.VFC<PostListItemFragment> = ({\n  slug,\n  excerpt,\n  frontmatter,\n}) => {\n  const { date, title, tags, excerptAst: frontmatterExcerpt } = frontmatter!;\n\n  return (\n    <div>\n      <Link to={slug} className=\"hover:text-violet-500\">\n        <h2 className=\"text-xl font-medium\">{title}</h2>\n      </Link>\n      <div className=\"text-slate-500 mt-2\">{formatDate(date)}</div>\n      <div className=\"mt-2 excerpt-markdown\">\n        {frontmatterExcerpt ? renderAst(frontmatterExcerpt) : excerpt}\n      </div>\n      {tags && (\n        <div className=\"flex flex-row flex-wrap space-x-3 mt-3\">\n          {tags.map((tag) => (\n            <Tag key={tag} name={tag} color=\"violet\" />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport const postListItemFragment = graphql`\n  fragment PostListItem on MarkdownRemark {\n    slug\n    excerpt(pruneLength: 150, truncate: true)\n    frontmatter {\n      title\n      date\n      tags\n      excerptAst\n    }\n  }\n`;\n","import { NoData } from '~/components/common';\nimport { PostListItem } from './PostListItem';\n\nexport interface PostListProps {\n  posts: PostListItemFragment[];\n}\n\nexport const PostList: React.VFC<PostListProps> = ({ posts }) => {\n  if (posts.length === 0) {\n    return <NoData />;\n  }\n\n  return (\n    <div className=\"flex flex-col space-y-12\">\n      {posts.map((post) => (\n        <PostListItem key={post.slug} {...post} />\n      ))}\n    </div>\n  );\n};\n","import { Link } from 'gatsby';\n\ntype PostEdgeFragment = {\n  slug: string;\n  frontmatter: {\n    title: string;\n  };\n} | null;\n\nexport interface PostNavProps {\n  previous: PostEdgeFragment; // 이전글\n  next: PostEdgeFragment; // 다음글\n}\n\nexport const PostNav: React.VFC<PostNavProps> = ({ previous, next }) => {\n  if (!previous && !next) return null;\n\n  return (\n    <div className=\"flex mt-10 -mb-10\">\n      <div className=\"max-w-2/5\">\n        {previous && (\n          <Link\n            to={previous.slug}\n            className=\"hover:text-violet-700 flex items-center\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6 text-slate-400 mr-1 flex-shrink-0\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M15 19l-7-7 7-7\"\n              />\n            </svg>\n            <div>\n              <div className=\"text-xs text-slate-500\">Previous</div>\n              <div>{previous.frontmatter.title}</div>\n            </div>\n          </Link>\n        )}\n      </div>\n      <div className=\"max-w-2/5 text-right ml-auto\">\n        {next && (\n          <Link\n            to={next.slug}\n            className=\"hover:text-violet-700 flex items-center\"\n          >\n            <div>\n              <div className=\"text-xs text-slate-500\">Next</div>\n              <div>{next.frontmatter.title}</div>\n            </div>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6 text-slate-400 ml-1 flex-shrink-0\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M9 5l7 7-7 7\"\n              />\n            </svg>\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { graphql, PageProps } from 'gatsby';\nimport { GoogleAdsense, Seo } from '~/components/common';\nimport { Layout } from '~/components/layout';\nimport { Pagination, PostList } from '~/components/post';\n\nconst PostListTemplate: React.VFC<PageProps<PostsQuery>> = ({ data }) => {\n  const { nodes, pageInfo } = data.allMarkdownRemark;\n\n  return (\n    <Layout>\n      <Seo />\n      <GoogleAdsense slot=\"8006423859\" className=\"mb-10\" />\n      <PostList posts={nodes} />\n      <Pagination {...pageInfo} />\n    </Layout>\n  );\n};\n\nexport default PostListTemplate;\n\nexport const query = graphql`\n  query Posts($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { glob: \"**/_contents/posts/**/*\" } }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        ...PostListItem\n      }\n      pageInfo {\n        ...Pagination\n      }\n    }\n  }\n`;\n"],"names":["Comments","id","containerRef","useRef","useEffect","container","current","script","document","createElement","setAttribute","appendChild","innerHTML","_jsx","ref","className","style","minHeight","displayName","pageItemClassName","iconClassName","Pagination","currentPage","pageCount","hasPreviousPage","hasNextPage","pages","useMemo","Array","from","length","_","n","isPage","isCurrentPage","page","map","p","getPagination","_jsxs","Link","to","cx","LeftIcon","item","i","PaginationItem","RightIcon","Post","frontmatter","htmlAst","title","date","preview","tags","GatsbyImage","image","getImage","alt","formatDate","tag","Tag","name","color","renderAst","PostListItem","slug","excerpt","frontmatterExcerpt","excerptAst","PostList","posts","NoData","post","PostNav","previous","next","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","data","allMarkdownRemark","nodes","pageInfo","Layout","Seo","GoogleAdsense","slot"],"sourceRoot":""}