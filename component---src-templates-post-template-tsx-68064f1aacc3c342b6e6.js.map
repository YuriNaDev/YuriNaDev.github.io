{"version":3,"file":"component---src-templates-post-template-tsx-68064f1aacc3c342b6e6.js","mappings":"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","sources":["webpack://yrnana.github.io/./src/components/post/Comments.tsx","webpack://yrnana.github.io/./src/components/post/Post.tsx","webpack://yrnana.github.io/./src/components/post/PostNav.tsx","webpack://yrnana.github.io/./src/templates/PostTemplate.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nconst Comments: React.VFC<{ id: string }> = ({ id }) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      // add utteranc comment\n      const script = document.createElement('script');\n      script.setAttribute('src', 'https://utteranc.es/client.js');\n      script.setAttribute('repo', 'yrnana/yrnana.github.io');\n      script.setAttribute('issue-term', id);\n      script.setAttribute('label', 'comment');\n      script.setAttribute('theme', 'github-light');\n      script.setAttribute('crossorigin', 'anonymous');\n      script.setAttribute('async', 'true');\n      container.appendChild(script);\n      return () => {\n        container.innerHTML = '';\n      };\n    }\n  }, [id]);\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"mt-20 relative\"\n      style={{ minHeight: 269 }}\n    />\n  );\n};\n\nComments.displayName = 'Comments';\n\nexport default Comments;\n","import { graphql } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport Tag from '~/components/tag/Tag';\nimport { formatDate, renderAst } from '~/helpers/utils';\n\nconst Post: React.VFC<PostItemFragment> = ({ frontmatter, htmlAst }) => {\n  const { title, date, preview, tags } = frontmatter!;\n\n  return (\n    <article>\n      <header className=\"text-center mt-10 mb-20\">\n        {preview && (\n          <GatsbyImage\n            image={getImage(preview?.childImageSharp?.gatsbyImageData)!}\n            alt={title}\n            className=\"mb-10\"\n          />\n        )}\n        <h1 className=\"text-3xl font-semibold\">{title}</h1>\n        <div className=\"text-gray-500 mt-4\">{formatDate(date)}</div>\n        {tags && (\n          <div className=\"flex flex-row flex-wrap justify-center space-x-3 mt-4\">\n            {tags.map((tag) => (\n              <Tag key={tag} name={tag} color=\"purple\" />\n            ))}\n          </div>\n        )}\n      </header>\n      <div className=\"markdown\">{renderAst(htmlAst)}</div>\n    </article>\n  );\n};\n\nexport default Post;\n\nexport const postItemFragment = graphql`\n  fragment PostItem on MarkdownRemark {\n    htmlAst\n    excerpt(pruneLength: 150, truncate: true)\n    frontmatter {\n      title\n      date\n      tags\n      excerpt\n      preview {\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED, placeholder: BLURRED)\n        }\n      }\n    }\n  }\n`;\n","import { Link } from 'gatsby';\n\ntype PostEdgeFragment = {\n  slug: string;\n  frontmatter: {\n    title: string;\n  };\n} | null;\n\nexport interface PostNavProps {\n  previous: PostEdgeFragment; // 이전글\n  next: PostEdgeFragment; // 다음글\n}\n\nconst PostNav: React.VFC<PostNavProps> = ({ previous, next }) => {\n  if (!previous && !next) return null;\n\n  return (\n    <div className=\"flex mt-20 -mb-10\">\n      <div className=\"max-w-2/5\">\n        {previous && (\n          <Link\n            to={previous.slug}\n            className=\"hover:text-purple-700 flex items-center\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6 text-gray-400 mr-1 flex-shrink-0\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M15 19l-7-7 7-7\"\n              />\n            </svg>\n            <div>\n              <div className=\"text-xs text-gray-500\">Previous</div>\n              <div>{previous.frontmatter.title}</div>\n            </div>\n          </Link>\n        )}\n      </div>\n      <div className=\"max-w-2/5 text-right ml-auto\">\n        {next && (\n          <Link\n            to={next.slug}\n            className=\"hover:text-purple-700 flex items-center\"\n          >\n            <div>\n              <div className=\"text-xs text-gray-500\">Next</div>\n              <div>{next.frontmatter.title}</div>\n            </div>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6 text-gray-400 ml-1 flex-shrink-0\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M9 5l7 7-7 7\"\n              />\n            </svg>\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PostNav;\n","import { graphql, PageProps } from 'gatsby';\nimport { getSrc, ImageDataLike } from 'gatsby-plugin-image';\nimport Seo from '~/components/common/Seo';\nimport Layout from '~/components/layout/Layout';\nimport Comments from '~/components/post/Comments';\nimport Post from '~/components/post/Post';\nimport PostNav, { PostNavProps } from '~/components/post/PostNav';\n\ninterface PostPageContext extends PostNavProps {\n  id: string;\n}\n\nconst PostTemplate: React.VFC<PageProps<PostQuery, PostPageContext>> = ({\n  data,\n  pageContext,\n}) => {\n  const post = data.markdownRemark!;\n  const { previous, next, id } = pageContext;\n  const { title, excerpt, preview, tags } = post.frontmatter!;\n\n  return (\n    <Layout>\n      <Seo\n        title={title}\n        description={excerpt || post.excerpt!}\n        image={preview ? getSrc(preview as ImageDataLike) : undefined}\n        keywords={tags?.join(',')}\n        type=\"article\"\n        isBlogTitleDisabled\n      />\n      <Post {...post} />\n      <PostNav previous={previous} next={next} />\n      <Comments id={id} />\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n\nexport const query = graphql`\n  query Post($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      ...PostItem\n    }\n  }\n`;\n"],"names":["Comments","id","containerRef","useRef","useEffect","container","current","script","document","createElement","setAttribute","appendChild","innerHTML","ref","className","style","minHeight","displayName","frontmatter","htmlAst","title","date","preview","tags","G","image","getImage","childImageSharp","gatsbyImageData","alt","formatDate","map","tag","Tag","name","color","renderAst","previous","next","Link","to","slug","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","data","pageContext","post","markdownRemark","excerpt","Layout","Seo","description","getSrc","undefined","keywords","join","type","isBlogTitleDisabled"],"sourceRoot":""}