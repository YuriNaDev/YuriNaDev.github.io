{"version":3,"file":"component---src-templates-post-list-by-tag-template-tsx-878262b717d6f1950bbb.js","mappings":";0GAAA,OAOA,WACE,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGP,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQM,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IACvB,GAAIA,EAAID,OAAQ,CACd,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAE/BK,GACFT,EAAQM,KAAKG,SAGZ,GAAgB,WAAZJ,EACT,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACpC,IAAK,IAAIG,KAAOV,EACVP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAC/Bd,EAAQM,KAAKQ,QAIjBd,EAAQM,KAAKF,EAAIO,aAKvB,OAAOX,EAAQgB,KAAK,KAGeC,EAAOC,SAC1CnB,EAAWoB,QAAUpB,EACrBkB,EAAOC,QAAUnB,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aA9CL,8DCwBA,IAvBsB,SAAC,GAII,IAHzBqB,EAGwB,EAHxBA,KAGwB,IAFxBC,OAAAA,OAEwB,MAFf,0BAEe,MADxBC,OAAAA,OACwB,MADf,OACe,EAOxB,OANAC,EAAAA,EAAAA,YAAU,WACc,oBAAXC,SACRA,OAAOC,aAAe,IAAInB,KAAK,MAEjC,KAGDoB,EAAAA,EAAAA,KAAAA,MAAAA,CACEC,UAAU,cACVC,MAAO,CAAEC,QAAS,SAClB,iBAAgBR,EAChB,eAAcD,EACd,iBAAgBE,EAChB,6BAA2B,+JClBpBQ,EAAiC,SAAC,GAIxC,IAAD,IAHJC,MAAAA,OAGI,MAHI,EAGJ,MAFJC,OAAAA,OAEI,MAFK,EAEL,EADJL,EACI,EADJA,UAEA,OACED,EAAAA,EAAAA,KAAAA,MAAAA,CACEO,MAAM,6BACNN,UAAWO,GAAAA,CAAG,KAAKH,EAAN,KAAoBC,EAAUL,GAC3CQ,QAAQ,YACRC,KAAK,eAJP,UAMEV,EAAAA,EAAAA,KAAAA,OAAAA,CACEW,SAAS,UACTC,EAAE,oHACFC,SAAS,eAMJC,EAAkC,SAAC,GAIzC,IAAD,IAHJT,MAAAA,OAGI,MAHI,EAGJ,MAFJC,OAAAA,OAEI,MAFK,EAEL,EADJL,EACI,EADJA,UAEA,OACED,EAAAA,EAAAA,KAAAA,MAAAA,CACEO,MAAM,6BACNN,UAAWO,GAAAA,CAAG,KAAKH,EAAN,KAAoBC,EAAUL,GAC3CQ,QAAQ,YACRC,KAAK,eAJP,UAMEV,EAAAA,EAAAA,KAAAA,OAAAA,CACEW,SAAS,UACTC,EAAE,qHACFC,SAAS,eAMJE,EAA0C,SAAC,GAIjD,IAAD,IAHJV,MAAAA,OAGI,MAHI,EAGJ,MAFJC,OAAAA,OAEI,MAFK,EAEL,EADJL,EACI,EADJA,UAEA,OACED,EAAAA,EAAAA,KAAAA,MAAAA,CACEO,MAAM,6BACNN,UAAWO,GAAAA,CAAG,KAAKH,EAAN,KAAoBC,EAAUL,GAC3CS,KAAK,OACLD,QAAQ,YACRO,OAAO,eALT,UAOEhB,EAAAA,EAAAA,KAAAA,OAAAA,CACEiB,cAAc,QACdC,eAAe,QACfC,YAAa,EACbP,EAAE,oHCtDV,IAX0B,WACxB,OACEQ,EAAAA,EAAAA,MAAAA,MAAAA,CAAKnB,UAAU,oBAAf,WACED,EAAAA,EAAAA,KAAAA,MAAAA,CAAKC,UAAU,kDAAf,UACED,EAAAA,EAAAA,KAACe,EAAAA,GAAD,OAEFf,EAAAA,EAAAA,KAAAA,MAAAA,CAAKC,UAAU,sBAAf,kJCuBN,EA3BsD,SAAC,GAIhD,IAHLoB,EAGI,EAHJA,KACAC,EAEI,EAFJA,QAGA,EADI,EADJC,YAEQC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,KAAkBC,EAAvC,EAA2BC,WAE3B,OACER,EAAAA,EAAAA,MAAAA,MAAAA,CAAAA,SAAAA,EACEpB,EAAAA,EAAAA,KAAC6B,EAAAA,KAAD,CAAMC,GAAIT,EAAMpB,UAAU,wBAA1B,UACED,EAAAA,EAAAA,KAAAA,KAAAA,CAAIC,UAAU,sBAAd,SAAqCwB,OAEvCzB,EAAAA,EAAAA,KAAAA,MAAAA,CAAKC,UAAU,sBAAf,UAAsC8B,EAAAA,EAAAA,GAAWP,MACjDxB,EAAAA,EAAAA,KAAAA,MAAAA,CAAKC,UAAU,wBAAf,SACG0B,GAAqBK,EAAAA,EAAAA,GAAUL,GAAsBL,IAEvDI,IACC1B,EAAAA,EAAAA,KAAAA,MAAAA,CAAKC,UAAU,yCAAf,SACGyB,EAAKO,KAAI,SAACC,GAAD,OACRlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAD,CAAeC,KAAMF,EAAKG,MAAM,UAAtBH,YCFtB,EAd2C,SAAC,GAAe,IAAbI,EAAY,EAAZA,MAC5C,OAAqB,IAAjBA,EAAM7D,QACDuB,EAAAA,EAAAA,KAACuC,EAAAA,EAAD,KAIPvC,EAAAA,EAAAA,KAAAA,MAAAA,CAAKC,UAAU,2BAAf,SACGqC,EAAML,KAAI,SAACO,GAAD,OACTxC,EAAAA,EAAAA,KAACyC,EAAD,iBAAkCD,GAAfA,EAAKnB,4GCQhC,UAfI,SAAC,GAA2B,IAAzBqB,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACX,OACEvB,EAAAA,EAAAA,MAACwB,EAAAA,EAAD,YACE5C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAD,CAAKpB,MAAOkB,EAAYT,OACxBlC,EAAAA,EAAAA,KAAAA,KAAAA,CAAIC,UAAU,oBAAd,UACED,EAAAA,EAAAA,KAAAA,MAAAA,CAAKC,UAAU,iHAAf,SACG0C,EAAYT,SAGjBlC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAD,CAAUR,MAAOI,EAAKK,kBAAkBC,SACxChD,EAAAA,EAAAA,KAACiD,EAAAA,EAAD,CAAevD,KAAK","sources":["webpack://yrnana.github.io/./node_modules/classnames/index.js","webpack://yrnana.github.io/./src/components/common/GoogleAdsense.tsx","webpack://yrnana.github.io/./src/components/common/Icon.tsx","webpack://yrnana.github.io/./src/components/common/NoData.tsx","webpack://yrnana.github.io/./src/components/post/PostListItem.tsx","webpack://yrnana.github.io/./src/components/post/PostList.tsx","webpack://yrnana.github.io/./src/templates/PostListByTagTemplate.tsx"],"sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import { useEffect } from 'react';\n\ntype GoogleAdsenseProps = {\n  slot: string;\n  client?: string;\n  format?: string;\n};\n\nconst GoogleAdsense = ({\n  slot,\n  client = 'ca-pub-4675264961434940',\n  format = 'auto',\n}: GoogleAdsenseProps) => {\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      (window.adsbygoogle || []).push({});\n    }\n  }, []);\n\n  return (\n    <ins\n      className=\"adsbygoogle\"\n      style={{ display: 'block' }}\n      data-ad-client={client}\n      data-ad-slot={slot}\n      data-ad-format={format}\n      data-full-width-responsive=\"true\"\n    />\n  );\n};\n\nexport default GoogleAdsense;\n","import cx from 'classnames';\n\nexport interface IconProps {\n  width?: number;\n  height?: number;\n  className?: string;\n}\n\nexport const LeftIcon: React.VFC<IconProps> = ({\n  width = 5,\n  height = 5,\n  className,\n}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={cx(`w-${width}`, `h-${height}`, className)}\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n};\n\nexport const RightIcon: React.VFC<IconProps> = ({\n  width = 5,\n  height = 5,\n  className,\n}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={cx(`w-${width}`, `h-${height}`, className)}\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n};\n\nexport const ExclamationCircle: React.VFC<IconProps> = ({\n  width = 6,\n  height = 6,\n  className,\n}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={cx(`w-${width}`, `h-${height}`, className)}\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n      />\n    </svg>\n  );\n};\n","import { ExclamationCircle } from '~/components/common/Icon';\n\nconst NoData: React.VFC = () => {\n  return (\n    <div className=\"text-center py-20\">\n      <div className=\"flex items-center justify-center text-slate-300\">\n        <ExclamationCircle />\n      </div>\n      <div className=\"mt-4 text-slate-300\">No Data</div>\n    </div>\n  );\n};\n\nexport default NoData;\n","import { graphql, Link } from 'gatsby';\nimport Tag from '~/components/tag/Tag';\nimport { formatDate, renderAst } from '~/helpers/utils';\n\nconst PostListItem: React.VFC<PostListItemFragment> = ({\n  slug,\n  excerpt,\n  frontmatter,\n}) => {\n  const { date, title, tags, excerptAst: frontmatterExcerpt } = frontmatter!;\n\n  return (\n    <div>\n      <Link to={slug} className=\"hover:text-violet-500\">\n        <h2 className=\"text-xl font-medium\">{title}</h2>\n      </Link>\n      <div className=\"text-slate-500 mt-2\">{formatDate(date)}</div>\n      <div className=\"mt-2 excerpt-markdown\">\n        {frontmatterExcerpt ? renderAst(frontmatterExcerpt) : excerpt}\n      </div>\n      {tags && (\n        <div className=\"flex flex-row flex-wrap space-x-3 mt-3\">\n          {tags.map((tag) => (\n            <Tag key={tag} name={tag} color=\"violet\" />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PostListItem;\n\nexport const postListItemFragment = graphql`\n  fragment PostListItem on MarkdownRemark {\n    slug\n    excerpt(pruneLength: 150, truncate: true)\n    frontmatter {\n      title\n      date\n      tags\n      excerptAst\n    }\n  }\n`;\n","import NoData from '~/components/common/NoData';\nimport PostListItem from './PostListItem';\n\nexport interface PostListProps {\n  posts: PostListItemFragment[];\n}\n\nconst PostList: React.VFC<PostListProps> = ({ posts }) => {\n  if (posts.length === 0) {\n    return <NoData />;\n  }\n\n  return (\n    <div className=\"flex flex-col space-y-12\">\n      {posts.map((post) => (\n        <PostListItem key={post.slug} {...post} />\n      ))}\n    </div>\n  );\n};\n\nexport default PostList;\n","import { graphql, PageProps } from 'gatsby';\nimport GoogleAdsense from '~/components/common/GoogleAdsense';\nimport Seo from '~/components/common/Seo';\nimport Layout from '~/components/layout/Layout';\nimport PostList from '~/components/post/PostList';\n\nconst PostListByTagTemplate: React.VFC<\n  PageProps<PostsByTagQuery, PostsByTagQueryVariables>\n> = ({ data, pageContext }) => {\n  return (\n    <Layout>\n      <Seo title={pageContext.tag} />\n      <h2 className=\"text-center mb-10\">\n        <div className=\"select-none inline-block rounded-full px-6 py-4 text-2xl leading-4 font-semibold text-indigo-500 bg-indigo-100\">\n          {pageContext.tag}\n        </div>\n      </h2>\n      <PostList posts={data.allMarkdownRemark.nodes} />\n      <GoogleAdsense slot=\"8006423859\" />\n    </Layout>\n  );\n};\n\nexport default PostListByTagTemplate;\n\nexport const query = graphql`\n  query PostsByTag($tag: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fileAbsolutePath: { glob: \"**/_contents/posts/**/*\" }\n        frontmatter: { tags: { in: [$tag] } }\n      }\n    ) {\n      nodes {\n        ...PostListItem\n      }\n    }\n  }\n`;\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","slot","client","format","useEffect","window","adsbygoogle","_jsx","className","style","display","LeftIcon","width","height","xmlns","cx","viewBox","fill","fillRule","d","clipRule","RightIcon","ExclamationCircle","stroke","strokeLinecap","strokeLinejoin","strokeWidth","_jsxs","slug","excerpt","frontmatter","date","title","tags","frontmatterExcerpt","excerptAst","Link","to","formatDate","renderAst","map","tag","Tag","name","color","posts","NoData","post","PostListItem","data","pageContext","Layout","Seo","PostList","allMarkdownRemark","nodes","GoogleAdsense"],"sourceRoot":""}