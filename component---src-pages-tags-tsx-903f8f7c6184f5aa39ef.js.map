{"version":3,"file":"component---src-pages-tags-tsx-903f8f7c6184f5aa39ef.js","mappings":"2OAQaA,EAAiC,SAAC,GAIxC,IAAD,IAHJC,MAAAA,OAGI,MAHI,EAGJ,MAFJC,OAAAA,OAEI,MAFK,EAEL,EADJC,EACI,EADJA,UAEA,OACE,gBACEC,MAAM,6BACND,UAAWE,GAAAA,CAAG,KAAKJ,EAAN,KAAoBC,EAAUC,GAC3CG,QAAQ,YACRC,KAAK,eAJP,UAME,iBACEC,SAAS,UACTC,EAAE,oHACFC,SAAS,eAMJC,EAAkC,SAAC,GAIzC,IAAD,IAHJV,MAAAA,OAGI,MAHI,EAGJ,MAFJC,OAAAA,OAEI,MAFK,EAEL,EADJC,EACI,EADJA,UAEA,OACE,gBACEC,MAAM,6BACND,UAAWE,GAAAA,CAAG,KAAKJ,EAAN,KAAoBC,EAAUC,GAC3CG,QAAQ,YACRC,KAAK,eAJP,UAME,iBACEC,SAAS,UACTC,EAAE,qHACFC,SAAS,eAMJE,EAA0C,SAAC,GAIjD,IAAD,IAHJX,MAAAA,OAGI,MAHI,EAGJ,MAFJC,OAAAA,OAEI,MAFK,EAEL,EADJC,EACI,EADJA,UAEA,OACE,gBACEC,MAAM,6BACND,UAAWE,GAAAA,CAAG,KAAKJ,EAAN,KAAoBC,EAAUC,GAC3CI,KAAK,OACLD,QAAQ,YACRO,OAAO,eALT,UAOE,iBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbP,EAAE,0D,4CCtDV,IAX0B,WACxB,OACE,iBAAKN,UAAU,oBAAf,WACE,gBAAKA,UAAU,iDAAf,UACE,SAAC,KAAD,OAEF,gBAAKA,UAAU,qBAAf,0B,gICqBN,EArByC,SAAC,GAAc,IAAZc,EAAW,EAAXA,KAC1C,GAAiBC,EAAAA,EAAAA,UAAQ,kBA2B3B,SAA6BD,GAE3B,IAAME,EACJF,EAAKG,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,EAAKC,aAAY,GAAKN,EAAKO,OAE1DC,EACJR,EAAKG,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAI,SAAIC,EAAKC,WAAaJ,EAAM,KAAG,GAC/DF,EAAKO,OAEDE,EAAC,SAAGD,EAAM,IAChB,MAAO,CAAEN,EAAAA,EAAGO,IAAAA,GArCmBC,CAAoBV,KAAO,CAACA,IAAnDE,EAAR,EAAQA,EAAGO,EAAX,EAAWA,EAEX,OAAoB,IAAhBT,EAAKO,QACA,SAACI,EAAA,EAAD,KAIP,gBAAKzB,UAAU,sCAAf,SACGc,EAAKY,KAAI,SAACC,GAAD,OACR,SAACC,EAAA,EAAD,CAEEC,KAAMF,EAAIG,WACVC,MAAOJ,EAAIP,WACXY,MAAOC,EAASN,EAAIP,WAAYJ,EAAGO,IAH9BI,EAAIG,kBAqCnB,SAASG,EAASF,EAAef,EAAWO,GAC1C,IAAMW,GAAKH,EAAQf,GAAKO,EACxB,OAAIW,GAAK,IACA,SACEA,IAAM,KAAQA,GAAK,IACrB,QACEA,IAAM,KAAQA,EAAI,IACpB,SACEA,GAAK,KAAQA,EAAI,IACnB,OAEF,OC9DT,IASA,EATiD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClD,OACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAKC,MAAM,OAAOC,SAAO,KACzB,SAAC,EAAD,CAASzB,KAAMqB,EAAKK,OAAOC","sources":["webpack://yrnana.github.io/./src/components/common/Icon.tsx","webpack://yrnana.github.io/./src/components/common/NoData.tsx","webpack://yrnana.github.io/./src/components/tag/TagList.tsx","webpack://yrnana.github.io/./src/pages/tags.tsx"],"sourcesContent":["import cx from 'classnames';\n\nexport interface IconProps {\n  width?: number;\n  height?: number;\n  className?: string;\n}\n\nexport const LeftIcon: React.VFC<IconProps> = ({\n  width = 5,\n  height = 5,\n  className,\n}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={cx(`w-${width}`, `h-${height}`, className)}\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n};\n\nexport const RightIcon: React.VFC<IconProps> = ({\n  width = 5,\n  height = 5,\n  className,\n}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={cx(`w-${width}`, `h-${height}`, className)}\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n};\n\nexport const ExclamationCircle: React.VFC<IconProps> = ({\n  width = 6,\n  height = 6,\n  className,\n}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={cx(`w-${width}`, `h-${height}`, className)}\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n      />\n    </svg>\n  );\n};\n","import { ExclamationCircle } from '~/components/common/Icon';\n\nconst NoData: React.VFC = () => {\n  return (\n    <div className=\"text-center py-20\">\n      <div className=\"flex items-center justify-center text-gray-300\">\n        <ExclamationCircle />\n      </div>\n      <div className=\"mt-4 text-gray-300\">No Data</div>\n    </div>\n  );\n};\n\nexport default NoData;\n","import { useMemo } from 'react';\nimport NoData from '~/components/common/NoData';\nimport Tag from './Tag';\n\nexport interface TagListProps {\n  tags: TagItemFragment[];\n}\n\nconst TagList: React.VFC<TagListProps> = ({ tags }) => {\n  const { m, σ } = useMemo(() => getMeanAndDeviation(tags), [tags]);\n\n  if (tags.length === 0) {\n    return <NoData />;\n  }\n\n  return (\n    <div className=\"flex flex-col space-y-4 items-start\">\n      {tags.map((tag) => (\n        <Tag\n          key={tag.fieldValue}\n          name={tag.fieldValue!}\n          count={tag.totalCount}\n          color={getColor(tag.totalCount, m, σ)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TagList;\n\n/**\n * 태그목록으로부터 평균과 표준편차를 계산\n * @param tags 태그목록\n * @returns 평균 & 표준편차\n */\nfunction getMeanAndDeviation(tags: TagItemFragment[]) {\n  // 평균 m\n  const m =\n    tags.reduce((prev, curr) => prev + curr.totalCount, 0) / tags.length;\n  // 분산 V\n  const V =\n    tags.reduce((prev, curr) => prev + (curr.totalCount - m) ** 2, 0) /\n    tags.length;\n  // 표준편차 σ\n  const σ = V ** (1 / 2);\n  return { m, σ };\n}\n\n/**\n * 태그 frequency로부터 color를 계산\n * @param count 태그 frequency\n * @param m 평균\n * @param σ 표준편차\n * @returns 색상 string\n */\nfunction getColor(count: number, m: number, σ: number): string {\n  const z = (count - m) / σ; // 표준화\n  if (z < -0.84) {\n    return 'yellow'; // 0 ~ 20%\n  } else if (z >= -0.84 && z < -0.25) {\n    return 'green'; // 20 ~ 40%\n  } else if (z >= -0.25 && z < 0.25) {\n    return 'purple'; // 40 ~ 60%\n  } else if (z >= 0.25 && z < 0.84) {\n    return 'blue'; // 60 ~ 80%\n  }\n  return 'pink'; // 80 ~ 100%\n}\n","import { graphql, PageProps } from 'gatsby';\nimport Seo from '~/components/common/Seo';\nimport Layout from '~/components/layout/Layout';\nimport TagList from '~/components/tag/TagList';\n\nconst TagsPage: React.FC<PageProps<TagsQuery>> = ({ data }) => {\n  return (\n    <Layout>\n      <Seo title=\"tags\" noindex />\n      <TagList tags={data.allMdx.group} />\n    </Layout>\n  );\n};\n\nexport default TagsPage;\n\nexport const query = graphql`\n  query Tags {\n    allMdx(\n      filter: {\n        fileAbsolutePath: { glob: \"**/_contents/posts/*\" }\n        frontmatter: { published: { eq: true } }\n      }\n    ) {\n      group(field: frontmatter___tags) {\n        ...TagItem\n      }\n    }\n  }\n`;\n"],"names":["LeftIcon","width","height","className","xmlns","cx","viewBox","fill","fillRule","d","clipRule","RightIcon","ExclamationCircle","stroke","strokeLinecap","strokeLinejoin","strokeWidth","tags","useMemo","m","reduce","prev","curr","totalCount","length","V","σ","getMeanAndDeviation","NoData","map","tag","Tag","name","fieldValue","count","color","getColor","z","data","Layout","Seo","title","noindex","allMdx","group"],"sourceRoot":""}