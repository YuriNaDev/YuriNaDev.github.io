{"version":3,"file":"component---src-templates-post-list-template-tsx-6d9c9f20d9233f1f5d72.js","mappings":"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","sources":["webpack://yrnana.github.io/./src/components/post/Pagination.tsx","webpack://yrnana.github.io/./src/components/post/PostListItem.tsx","webpack://yrnana.github.io/./src/components/post/PostList.tsx","webpack://yrnana.github.io/./src/templates/PostListTemplate.tsx"],"sourcesContent":["import { useMemo } from 'react';\nimport cx from 'classnames';\nimport { Link } from 'gatsby';\nimport { LeftIcon, RightIcon } from '~/components/common/Icon';\n\nconst pageItemClassName = 'w-10 py-2 text-center';\nconst iconClassName = 'flex justify-center';\n\nconst Pagination: React.VFC<PageInfo> = ({\n  currentPage,\n  pageCount,\n  hasPreviousPage,\n  hasNextPage,\n}) => {\n  const pages = useMemo(\n    () => getPagination(currentPage, pageCount),\n    [currentPage, pageCount],\n  );\n\n  return (\n    <div className=\"flex flex-row flex-nowrap items-center justify-center mt-8\">\n      {hasPreviousPage ? (\n        <Link\n          to={`/page/${currentPage - 1}`}\n          className={cx(pageItemClassName, iconClassName)}\n        >\n          <LeftIcon />\n        </Link>\n      ) : (\n        <div className={cx('text-gray-300', pageItemClassName, iconClassName)}>\n          <LeftIcon />\n        </div>\n      )}\n      {pages.map((item, i) => (\n        <PaginationItem key={`${item.page}_${i}`} {...item} />\n      ))}\n      {hasNextPage ? (\n        <Link\n          to={`/page/${currentPage + 1}`}\n          className={cx(pageItemClassName, iconClassName)}\n        >\n          <RightIcon />\n        </Link>\n      ) : (\n        <div className={cx('text-gray-300', pageItemClassName, iconClassName)}>\n          <RightIcon />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Pagination;\n\ninterface PaginationItemProps {\n  page: string | number;\n  isPage: boolean;\n  isCurrentPage: boolean;\n}\n\nconst PaginationItem: React.VFC<PaginationItemProps> = ({\n  page,\n  isPage,\n  isCurrentPage,\n}) => {\n  if (isPage && !isCurrentPage) {\n    return (\n      <Link to={`/page/${page}`} className={pageItemClassName}>\n        {page}\n      </Link>\n    );\n  }\n  return (\n    <div\n      className={cx(pageItemClassName, 'cursor-default', {\n        'text-purple-500': isCurrentPage,\n      })}\n    >\n      {page}\n    </div>\n  );\n};\n\nfunction getPagination(\n  currentPage: number,\n  pageCount: number,\n): PaginationItemProps[] {\n  if (pageCount <= 7) {\n    return Array.from({ length: pageCount }, (_, n) => ({\n      isPage: true,\n      isCurrentPage: n + 1 === currentPage,\n      page: n + 1,\n    }));\n  }\n\n  let pages: (number | string)[];\n  if (currentPage <= 4) {\n    pages = [1, 2, 3, 4, 5, '…', pageCount];\n  } else if (currentPage >= pageCount - 3) {\n    pages = [\n      1,\n      '…',\n      pageCount - 4,\n      pageCount - 3,\n      pageCount - 2,\n      pageCount - 1,\n      pageCount,\n    ];\n  } else {\n    pages = [\n      1,\n      '…',\n      currentPage - 1,\n      currentPage,\n      currentPage + 1,\n      '…',\n      pageCount,\n    ];\n  }\n  return pages.map((p) => ({\n    isPage: typeof p === 'number',\n    isCurrentPage: p === currentPage,\n    page: p,\n  }));\n}\n","import { format } from 'date-fns';\nimport { graphql, Link } from 'gatsby';\nimport Tag from '~/components/tag/Tag';\n\nconst PostListItem: React.VFC<PostListItemFragment> = ({\n  slug,\n  excerpt,\n  frontmatter,\n}) => {\n  return (\n    <div>\n      <Link to={`/post/${slug!}`} className=\"hover:text-purple-500\">\n        <h2 className=\"text-xl font-medium\">{frontmatter?.title}</h2>\n      </Link>\n      <div className=\"text-gray-500 mt-2\">\n        {format(new Date(frontmatter?.date), 'PP')}\n      </div>\n      {excerpt && <div className=\"mt-2\">{frontmatter?.excerpt || excerpt}</div>}\n      {frontmatter?.tags && (\n        <div className=\"flex flex-row flex-wrap space-x-3 mt-3\">\n          {frontmatter.tags.map((tag) => (\n            <Tag key={tag} name={tag!} color=\"purple\" />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PostListItem;\n\nexport const postListItemFragment = graphql`\n  fragment PostListItem on Mdx {\n    slug\n    excerpt(pruneLength: 150, truncate: true)\n    frontmatter {\n      title\n      date\n      excerpt\n      tags\n    }\n  }\n`;\n","import NoData from '~/components/common/NoData';\nimport PostListItem from './PostListItem';\n\nexport interface PostListProps {\n  posts: PostListItemFragment[];\n}\n\nconst PostList: React.VFC<PostListProps> = ({ posts }) => {\n  if (posts.length === 0) {\n    return <NoData />;\n  }\n\n  return (\n    <div className=\"flex flex-col space-y-12\">\n      {posts.map((post) => (\n        <PostListItem key={post.slug!} {...post} />\n      ))}\n    </div>\n  );\n};\n\nexport default PostList;\n","import { graphql, PageProps } from 'gatsby';\nimport Seo from '~/components/common/Seo';\nimport Layout from '~/components/layout/Layout';\nimport Pagination from '~/components/post/Pagination';\nimport PostList from '~/components/post/PostList';\n\nconst PostListTemplate: React.VFC<PageProps<PostsQuery>> = ({ data }) => {\n  const { nodes, pageInfo } = data.allMdx;\n\n  return (\n    <Layout>\n      <Seo />\n      <PostList posts={nodes} />\n      <Pagination {...pageInfo} />\n    </Layout>\n  );\n};\n\nexport default PostListTemplate;\n\nexport const query = graphql`\n  query Posts($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fileAbsolutePath: { glob: \"**/_contents/posts/*\" }\n        frontmatter: { published: { eq: true } }\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        ...PostListItem\n      }\n      pageInfo {\n        currentPage\n        hasNextPage\n        hasPreviousPage\n        itemCount\n        pageCount\n        perPage\n        totalCount\n      }\n    }\n  }\n`;\n"],"names":["pageItemClassName","iconClassName","currentPage","pageCount","hasPreviousPage","hasNextPage","pages","useMemo","Array","from","length","_","n","isPage","isCurrentPage","page","map","p","getPagination","className","Link","to","cx","item","i","PaginationItem","slug","excerpt","frontmatter","title","format","Date","date","tags","tag","Tag","name","color","posts","NoData","post","data","allMdx","nodes","pageInfo","Layout","Seo"],"sourceRoot":""}