---
import { sortBy } from 'lodash-es';

import type { Tag, TagColor } from '~/types';
import { getTags } from '~/helpers/utils';
import PageMeta from '~/components/common/PageMeta.astro';
import Layout from '~/components/layout/Layout.astro';
import TagComponent from '~/components/tag/Tag.astro';

/**
 * 태그목록으로부터 평균과 표준편차를 계산
 * @param tags 태그목록
 * @returns 평균 & 표준편차
 */
function getMeanAndDeviation(tags: Tag[]) {
  // 평균 m
  const m = tags.reduce((prev, curr) => prev + curr.count, 0) / tags.length;
  // 분산 V
  const V =
    tags.reduce((prev, curr) => prev + (curr.count - m) ** 2, 0) / tags.length;
  // 표준편차 σ
  const σ = V ** (1 / 2);
  return { m, σ };
}

/**
 * 태그 frequency로부터 color를 계산
 * @param count 태그 frequency
 * @param m 평균
 * @param σ 표준편차
 * @returns 색상 string
 */
function getColor(count: number, m: number, σ: number): TagColor {
  const z = (count - m) / σ; // 표준화
  if (z < -0.84) {
    return 'yellow'; // 0 ~ 20%
  } else if (z >= -0.84 && z < -0.25) {
    return 'violet'; // 20 ~ 40%
  } else if (z >= -0.25 && z < 0.25) {
    return 'green'; // 40 ~ 60%
  } else if (z >= 0.25 && z < 0.84) {
    return 'sky'; // 60 ~ 80%
  }
  return 'rose'; // 80 ~ 100%
}

const tags = await getTags();
const { m, σ } = getMeanAndDeviation(tags);
const sortedTags = sortBy(tags, (tag) => tag.value.toLowerCase());
---

<Layout>
  <PageMeta slot="meta" />
  <Fragment slot="main">
    <div class="flex flex-col space-y-4 items-start">
      {
        sortedTags.map((tag) => (
          <TagComponent
            value={tag.value}
            count={tag.count}
            color={getColor(tag.count, m, σ)}
          />
        ))
      }
    </div>
  </Fragment>
</Layout>
