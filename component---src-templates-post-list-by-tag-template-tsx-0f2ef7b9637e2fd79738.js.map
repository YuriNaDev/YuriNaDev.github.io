{"version":3,"file":"component---src-templates-post-list-by-tag-template-tsx-0f2ef7b9637e2fd79738.js","mappings":"2OAQaA,EAAiC,SAAC,GAIxC,IAAD,IAHJC,MAAAA,OAGI,MAHI,EAGJ,MAFJC,OAAAA,OAEI,MAFK,EAEL,EADJC,EACI,EADJA,UAEA,OACE,gBACEC,MAAM,6BACND,UAAWE,GAAAA,CAAG,KAAKJ,EAAN,KAAoBC,EAAUC,GAC3CG,QAAQ,YACRC,KAAK,eAJP,UAME,iBACEC,SAAS,UACTC,EAAE,oHACFC,SAAS,eAMJC,EAAkC,SAAC,GAIzC,IAAD,IAHJV,MAAAA,OAGI,MAHI,EAGJ,MAFJC,OAAAA,OAEI,MAFK,EAEL,EADJC,EACI,EADJA,UAEA,OACE,gBACEC,MAAM,6BACND,UAAWE,GAAAA,CAAG,KAAKJ,EAAN,KAAoBC,EAAUC,GAC3CG,QAAQ,YACRC,KAAK,eAJP,UAME,iBACEC,SAAS,UACTC,EAAE,qHACFC,SAAS,eAMJE,EAA0C,SAAC,GAIjD,IAAD,IAHJX,MAAAA,OAGI,MAHI,EAGJ,MAFJC,OAAAA,OAEI,MAFK,EAEL,EADJC,EACI,EADJA,UAEA,OACE,gBACEC,MAAM,6BACND,UAAWE,GAAAA,CAAG,KAAKJ,EAAN,KAAoBC,EAAUC,GAC3CI,KAAK,OACLD,QAAQ,YACRO,OAAO,eALT,UAOE,iBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbP,EAAE,0D,6CCtDV,IAX0B,WACxB,OACE,iBAAKN,UAAU,oBAAf,WACE,gBAAKA,UAAU,iDAAf,UACE,SAAC,KAAD,OAEF,gBAAKA,UAAU,qBAAf,0B,2GCuBN,EA3BsD,SAAC,GAIhD,IAHLc,EAGI,EAHJA,KACAC,EAEI,EAFJA,WAGA,EADI,EADJC,YAEQC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,KAAkBC,EAAvC,EAA2BL,WAE3B,OACE,4BACE,SAAC,EAAAM,KAAD,CAAMC,GAAIR,EAAMd,UAAU,wBAA1B,UACE,eAAIA,UAAU,sBAAd,SAAqCkB,OAEvC,gBAAKlB,UAAU,qBAAf,UAAqCuB,EAAAA,EAAAA,GAAWN,MAChD,gBAAKjB,UAAU,iCAAf,UACGwB,EAAAA,EAAAA,GAAUJ,GAAyBL,GAAY,KAEjDI,IACC,gBAAKnB,UAAU,yCAAf,SACGmB,EAAKM,KAAI,SAACC,GAAD,OACR,SAACC,EAAA,EAAD,CAAeC,KAAMF,EAAKG,MAAM,UAAtBH,YCFtB,EAd2C,SAAC,GAAe,IAAbI,EAAY,EAAZA,MAC5C,OAAqB,IAAjBA,EAAMC,QACD,SAACC,EAAA,EAAD,KAIP,gBAAKhC,UAAU,2BAAf,SACG8B,EAAML,KAAI,SAACQ,GAAD,OACT,SAAC,EAAD,iBAAkCA,GAAfA,EAAKnB,a,wECMhC,UAdI,SAAC,GAA2B,IAAzBoB,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACX,OACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAKjB,MAAOiB,EAAYT,IAAKU,SAAO,KACpC,eAAIpC,UAAU,oBAAd,UACE,gBAAKA,UAAU,iHAAf,SACGmC,EAAYT,SAGjB,SAAC,IAAD,CAAUI,MAAOI,EAAKG,kBAAkBC","sources":["webpack://yrnana.github.io/./src/components/common/Icon.tsx","webpack://yrnana.github.io/./src/components/common/NoData.tsx","webpack://yrnana.github.io/./src/components/post/PostListItem.tsx","webpack://yrnana.github.io/./src/components/post/PostList.tsx","webpack://yrnana.github.io/./src/templates/PostListByTagTemplate.tsx"],"sourcesContent":["import cx from 'classnames';\n\nexport interface IconProps {\n  width?: number;\n  height?: number;\n  className?: string;\n}\n\nexport const LeftIcon: React.VFC<IconProps> = ({\n  width = 5,\n  height = 5,\n  className,\n}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={cx(`w-${width}`, `h-${height}`, className)}\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n};\n\nexport const RightIcon: React.VFC<IconProps> = ({\n  width = 5,\n  height = 5,\n  className,\n}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={cx(`w-${width}`, `h-${height}`, className)}\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n};\n\nexport const ExclamationCircle: React.VFC<IconProps> = ({\n  width = 6,\n  height = 6,\n  className,\n}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={cx(`w-${width}`, `h-${height}`, className)}\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n      />\n    </svg>\n  );\n};\n","import { ExclamationCircle } from '~/components/common/Icon';\n\nconst NoData: React.VFC = () => {\n  return (\n    <div className=\"text-center py-20\">\n      <div className=\"flex items-center justify-center text-gray-300\">\n        <ExclamationCircle />\n      </div>\n      <div className=\"mt-4 text-gray-300\">No Data</div>\n    </div>\n  );\n};\n\nexport default NoData;\n","import { graphql, Link } from 'gatsby';\nimport Tag from '~/components/tag/Tag';\nimport { formatDate, renderAst } from '~/helpers/utils';\n\nconst PostListItem: React.VFC<PostListItemFragment> = ({\n  slug,\n  excerptAst,\n  frontmatter,\n}) => {\n  const { date, title, tags, excerptAst: frontmatterExcerptAst } = frontmatter!;\n\n  return (\n    <div>\n      <Link to={slug} className=\"hover:text-purple-500\">\n        <h2 className=\"text-xl font-medium\">{title}</h2>\n      </Link>\n      <div className=\"text-gray-500 mt-2\">{formatDate(date)}</div>\n      <div className=\"mt-2 markdown excerpt-markdown\">\n        {renderAst(frontmatterExcerptAst || excerptAst, true)}\n      </div>\n      {tags && (\n        <div className=\"flex flex-row flex-wrap space-x-3 mt-3\">\n          {tags.map((tag) => (\n            <Tag key={tag} name={tag} color=\"purple\" />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PostListItem;\n\nexport const postListItemFragment = graphql`\n  fragment PostListItem on MarkdownRemark {\n    slug\n    excerptAst(pruneLength: 150, truncate: true)\n    frontmatter {\n      title\n      date\n      tags\n      excerptAst\n    }\n  }\n`;\n","import NoData from '~/components/common/NoData';\nimport PostListItem from './PostListItem';\n\nexport interface PostListProps {\n  posts: PostListItemFragment[];\n}\n\nconst PostList: React.VFC<PostListProps> = ({ posts }) => {\n  if (posts.length === 0) {\n    return <NoData />;\n  }\n\n  return (\n    <div className=\"flex flex-col space-y-12\">\n      {posts.map((post) => (\n        <PostListItem key={post.slug} {...post} />\n      ))}\n    </div>\n  );\n};\n\nexport default PostList;\n","import { graphql, PageProps } from 'gatsby';\nimport Seo from '~/components/common/Seo';\nimport Layout from '~/components/layout/Layout';\nimport PostList from '~/components/post/PostList';\n\nconst PostListByTagTemplate: React.VFC<\n  PageProps<PostsByTagQuery, PostsByTagQueryVariables>\n> = ({ data, pageContext }) => {\n  return (\n    <Layout>\n      <Seo title={pageContext.tag} noindex />\n      <h2 className=\"text-center mb-10\">\n        <div className=\"select-none inline-block rounded-full px-6 py-4 text-2xl leading-4 font-semibold text-indigo-500 bg-indigo-100\">\n          {pageContext.tag}\n        </div>\n      </h2>\n      <PostList posts={data.allMarkdownRemark.nodes} />\n    </Layout>\n  );\n};\n\nexport default PostListByTagTemplate;\n\nexport const query = graphql`\n  query PostsByTag($tag: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fileAbsolutePath: { glob: \"**/_contents/posts/*\" }\n        frontmatter: { published: { eq: true }, tags: { in: [$tag] } }\n      }\n    ) {\n      nodes {\n        ...PostListItem\n      }\n    }\n  }\n`;\n"],"names":["LeftIcon","width","height","className","xmlns","cx","viewBox","fill","fillRule","d","clipRule","RightIcon","ExclamationCircle","stroke","strokeLinecap","strokeLinejoin","strokeWidth","slug","excerptAst","frontmatter","date","title","tags","frontmatterExcerptAst","Link","to","formatDate","renderAst","map","tag","Tag","name","color","posts","length","NoData","post","data","pageContext","noindex","allMarkdownRemark","nodes"],"sourceRoot":""}