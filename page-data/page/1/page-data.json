{
    "componentChunkName": "component---src-templates-post-list-template-tsx",
    "path": "/page/1",
    "result": {"data":{"allMdx":{"nodes":[{"slug":"2021-09-02-eslint","excerpt":"ESLint를 이해하고 작성하는 방법","frontmatter":{"title":"ESLint 알고 쓰기","date":"2021-09-02T20:40:01+09:00","excerpt":"ESLint를 이해하고 작성하는 방법","tags":["ESLint"]}},{"slug":"2021-08-29-redux-saga","excerpt":"redux-saga 의 단점 생소한 generator 함수 ES6의 generator & yield는 비동기처리를 위한 함수인데 솔직히 프론트엔드 직무가 떡상한 시점에서 이미 더 간단하게 사용할 수 있는 ES7 async / await 가 등장했기 때문에 다소 생소한…","frontmatter":{"title":"redux-saga를 추천하지 않는 이유","date":"2021-08-29T15:29:45+09:00","excerpt":null,"tags":["React Query","Redux","Redux Saga"]}},{"slug":"2021-08-28-typescript-4.4","excerpt":"정말 좋은 기능들이 추가되어서 정리해본다.","frontmatter":{"title":"Typescript 4.4에 추가된 기능","date":"2021-08-28T14:31:28+09:00","excerpt":"정말 좋은 기능들이 추가되어서 정리해본다.","tags":["Typescript"]}},{"slug":"2021-08-26-usememo","excerpt":"공식 설명에도 computeExpensiveValue라고 설명하고 있다. 즉 비싼 연산을 언급하는 것이다. `a === b`는 비싼 연산이 아니다!","frontmatter":{"title":"간단한 연산에 useMemo 쓰지 말자","date":"2021-08-26T11:15:48+09:00","excerpt":"공식 설명에도 computeExpensiveValue라고 설명하고 있다. 즉 비싼 연산을 언급하는 것이다. `a === b`는 비싼 연산이 아니다!","tags":["useMemo"]}},{"slug":"2021-08-21-react-query-redux","excerpt":"`react-query`는 전역 상태관리 라이브러리가 아니라 서버와 클라이언트 간의 비동기 작업을 쉽게 해주는 라이브러리다.","frontmatter":{"title":"react-query가 redux같은 전역 상태관리 라이브러리를 대체할 수 있을까","date":"2021-08-21T18:05:04+09:00","excerpt":"`react-query`는 전역 상태관리 라이브러리가 아니라 서버와 클라이언트 간의 비동기 작업을 쉽게 해주는 라이브러리다.","tags":["React Query","Redux"]}},{"slug":"2021-08-21-context-api-redux","excerpt":"context api는 글로벌 상태관리 라이브러리를 대체할 수 없고, 여전히 많은 리액트 개발자들이 redux, mobx 등을 사용하고 있다.","frontmatter":{"title":"Context API가 존재하지만 여전히 사람들이 redux와 전역 상태관리 라이브러리를 쓰는 이유","date":"2021-08-21T16:31:55+09:00","excerpt":"context api는 글로벌 상태관리 라이브러리를 대체할 수 없고, 여전히 많은 리액트 개발자들이 redux, mobx 등을 사용하고 있다.","tags":["Jotai","React","Recoil","context API","Redux"]}},{"slug":"2021-08-15-testing-library","excerpt":"요점은 사용자 관점에서 테스트를 작성하자는 것이다.","frontmatter":{"title":"testing-library 사용팁","date":"2021-08-15T12:29:37+09:00","excerpt":"요점은 사용자 관점에서 테스트를 작성하자는 것이다.","tags":["test","Testing Library"]}},{"slug":"2021-08-09-scroll-event-raf-throttle","excerpt":"스크롤 이벤트는 브라우저가 스크롤 위치 변경을 렌더링 할때마다 트리거 되는 것이여서 자체적으로 rAF가 제공해주는것과 동일한 결과를 갖는다.","frontmatter":{"title":"scroll event에 rAF throttle을 적용해야할까","date":"2021-08-09T10:44:54+09:00","excerpt":"스크롤 이벤트는 브라우저가 스크롤 위치 변경을 렌더링 할때마다 트리거 되는 것이여서 자체적으로 rAF가 제공해주는것과 동일한 결과를 갖는다.","tags":["Performance","throttle"]}},{"slug":"2021-05-26-webpack-vite","excerpt":"이런 제목을 어디서 본 것 같은데? 라고 생각한다면 정상이다.","frontmatter":{"title":"Webpack 보다 더 빠른 빌드툴, Vite","date":"2021-05-26T21:45:47+09:00","excerpt":"이런 제목을 어디서 본 것 같은데? 라고 생각한다면 정상이다.","tags":["esbuild","Vite"]}},{"slug":"2021-04-16-useimperativehandle-forwardedref","excerpt":"useImperativeHandle 와  forwardedRef 를 활용하면 부모 컴포넌트가 자식 컴포넌트의 함수를 호출하거나 값을 가져올 수 있다.","frontmatter":{"title":"useImperativeHandle & forwardedRef 활용하기","date":"2021-04-16T21:49:11+09:00","excerpt":null,"tags":null}}],"pageInfo":{"currentPage":1,"hasNextPage":true,"hasPreviousPage":false,"itemCount":10,"pageCount":3,"perPage":10,"totalCount":30}}},"pageContext":{"limit":10,"skip":0}},
    "staticQueryHashes": ["1957264973","5457840"]}