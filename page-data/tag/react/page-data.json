{
    "componentChunkName": "component---src-templates-post-list-by-tag-template-tsx",
    "path": "/tag/react",
    "result": {"data":{"allMarkdownRemark":{"nodes":[{"slug":"/post/2021-10-25-when-should-you-not-use-react.memo","excerptAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"얕은-비교와-리액트-성능-최적화","style":"position:relative;"},"children":[{"type":"text","value":"얕은 비교와 리액트 성능 최적화"},{"type":"element","tagName":"a","properties":{"href":"#%EC%96%95%EC%9D%80-%EB%B9%84%EA%B5%90%EC%99%80-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94","ariaLabel":"얕은 비교와 리액트 성능 최적화 permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"xmlns":"http://www.w3.org/2000/svg","fill":"none","viewBox":"0 0 24 24","stroke":"currentColor"},"children":[{"type":"element","tagName":"path","properties":{"strokeLineCap":"round","strokeLineJoin":"round","strokeWidth":"2","d":"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"사내 FE모임 시간에 효율적인 스토리북 활용법에 대해 토론하다 \"스토리북의 Control 패널을 활용하려면 렌더링 최적화가 어렵다\" 라는 이야기를 하게 되었다. 그러다 인턴🤗분께서 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"PureComponent"}]},{"type":"text","value":"를 통한 얕은 비교로 렌더링 최적화를 하는건 어떻냐고 질문을 주셨는데, 덕분에 겉핥기로만 어렴풋이 알고 있던 리렌더링과 얕은 비교에 대해 좀더 생각해보게 된 것 같다."}]}],"data":{"quirksMode":false}},"frontmatter":{"title":"Q. When should you NOT use React.memo?","date":"2021-10-25T07:30:46+09:00","tags":["React","Optimization","memo"],"excerptAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"당연하지만 얕은비교연산 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"==="}]},{"type":"text","value":"가 어지간하면 리렌더링보다는 비용이 적게 들긴 한다. 그렇다면 왜 리액트는 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React.memo"}]},{"type":"text","value":"나 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React.PureComponent"}]},{"type":"text","value":"를 기본형으로 갖지 않을까?"}]}],"data":{"quirksMode":false}}}},{"slug":"/post/2021-08-21-context-api-redux","excerptAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"전역global-상태관리","style":"position:relative;"},"children":[{"type":"text","value":"전역(global) 상태관리"},{"type":"element","tagName":"a","properties":{"href":"#%EC%A0%84%EC%97%ADglobal-%EC%83%81%ED%83%9C%EA%B4%80%EB%A6%AC","ariaLabel":"전역global 상태관리 permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"xmlns":"http://www.w3.org/2000/svg","fill":"none","viewBox":"0 0 24 24","stroke":"currentColor"},"children":[{"type":"element","tagName":"path","properties":{"strokeLineCap":"round","strokeLineJoin":"round","strokeWidth":"2","d":"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"옛날옛적 호랑이 담배피던시절(?) 리액트의 러닝커브를 올리는 주범은 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"redux"}]},{"type":"text","value":"라고 해도 과언이 아닐 정도로 리덕스는 리액트를 개발하려면 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"react-router-dom"}]},{"type":"text","value":"과 함께 필수로 배워야 하는 서드파티 라이브러리였으며 보일러 플레이트 코드도 엄청난 양을 자랑했던 그런 라이브러리였다. (reducer, action, ...)"}]}],"data":{"quirksMode":false}},"frontmatter":{"title":"Context API가 존재하지만 여전히 사람들이 redux와 전역 상태관리 라이브러리를 쓰는 이유","date":"2021-08-21T16:31:55+09:00","tags":["Jotai","React","Recoil","context API","Redux"],"excerptAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"context api는 글로벌 상태관리 라이브러리를 대체할 수 없고, 여전히 많은 리액트 개발자들이 redux, mobx 등을 사용하고 있다."}]}],"data":{"quirksMode":false}}}},{"slug":"/post/2021-03-24-table-of-contents-using-intersection-observer-api","excerptAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Table Of Contents"}]},{"type":"text","value":"는 목차를 의미하고, "},{"type":"element","tagName":"a","properties":{"href":"/post/2021-03-14-intersection-observer-api"},"children":[{"type":"text","value":"Intersection Observer API"}]},{"type":"text","value":"는 타겟요소가 상위요소(또는 viewport)와 Intersect 하는지 관찰하는 기능을 제공하는 Web API다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"구현해야 할 기능과 방법을 생각해보면"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"글에서 헤더("},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h1"}]},{"type":"text","value":"~"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h6"}]},{"type":"text","value":")를 뽑아서 목차 목록을 생성"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"IntersectionObserver"}]},{"type":"text","value":" 인스턴스를 생성하고 헤더들을 관찰하도록 함"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"viewport 내에 보여지는 헤더들 중 가장 상위 헤더를 기준으로 활성화 목차를 결정"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"목차 아이템 클릭 시 헤더 위치로 이동"}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"frontmatter":{"title":"Table Of Contents using Intersection Observer API","date":"2021-03-24T23:05:36+09:00","tags":["React","Table Of Contents","Intersection Observer API"],"excerptAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Table Of Contents는 목차를 의미하고, Intersection Observer API는 타겟요소가 상위요소(또는 viewport)와 Intersect 하는지 관찰하는 기능을 제공하는 Web API다."}]}],"data":{"quirksMode":false}}}},{"slug":"/post/2021-02-13-framer-motion-react-motion-gesture","excerptAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"framer-motion"}]},{"type":"text","value":"는 리액트에서 애니메이션과 제스쳐를 쉽게 다룰 수 있도록 해주는 라이브러리다. "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"animate"}]},{"type":"text","value":" props에 값을 세팅하면 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"CSS transitions"}]},{"type":"text","value":"를 자동생성하는 방법으로 애니메이션을 만들어주고, drag나 hover 등의 제스쳐를 지원해주기도 하고, 단일 애니메이션 prop으로 하위 트리까지 이어지는 애니메이션을 적용할 수도 있다."}]}],"data":{"quirksMode":false}},"frontmatter":{"title":"framer-motion : react를 위한 motion & gesture 라이브러리","date":"2021-02-13T02:14:33+09:00","tags":["React","Framer Motion"],"excerptAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"framer-motion는 리액트에서 애니메이션과 제스쳐를 쉽게 다룰 수 있도록 해주는 라이브러리다."}]}],"data":{"quirksMode":false}}}}]}},"pageContext":{"tag":"React"}},
    "staticQueryHashes": ["1957264973","5457840"]}