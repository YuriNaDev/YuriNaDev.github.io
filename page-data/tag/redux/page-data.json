{
    "componentChunkName": "component---src-templates-post-list-by-tag-template-tsx",
    "path": "/tag/redux",
    "result": {"data":{"allMdx":{"nodes":[{"slug":"2021-08-29-redux-saga","excerpt":"redux-saga 의 단점 생소한 generator 함수 ES6의 generator & yield는 비동기처리를 위한 함수인데 솔직히 프론트엔드 직무가 떡상한 시점에서 이미 더 간단하게 사용할 수 있는 ES7 async / await 가 등장했기 때문에 다소 생소한…","frontmatter":{"title":"redux-saga를 추천하지 않는 이유","date":"2021-08-29T15:29:45+09:00","excerpt":null,"tags":["React Query","Redux","Redux Saga"]}},{"slug":"2021-08-21-react-query-redux","excerpt":"`react-query`는 전역 상태관리 라이브러리가 아니라 서버와 클라이언트 간의 비동기 작업을 쉽게 해주는 라이브러리다.","frontmatter":{"title":"react-query가 redux같은 전역 상태관리 라이브러리를 대체할 수 있을까","date":"2021-08-21T18:05:04+09:00","excerpt":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-query\"), \"\\uB294 \\uC804\\uC5ED \\uC0C1\\uD0DC\\uAD00\\uB9AC \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC\\uAC00 \\uC544\\uB2C8\\uB77C \\uC11C\\uBC84\\uC640 \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8 \\uAC04\\uC758 \\uBE44\\uB3D9\\uAE30 \\uC791\\uC5C5\\uC744 \\uC27D\\uAC8C \\uD574\\uC8FC\\uB294 \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC\\uB2E4.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tags":["React Query","Redux"]}},{"slug":"2021-08-21-context-api-redux","excerpt":"context api는 글로벌 상태관리 라이브러리를 대체할 수 없고, 여전히 많은 리액트 개발자들이 redux, mobx 등을 사용하고 있다.","frontmatter":{"title":"Context API가 존재하지만 여전히 사람들이 redux와 전역 상태관리 라이브러리를 쓰는 이유","date":"2021-08-21T16:31:55+09:00","excerpt":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"context api\\uB294 \\uAE00\\uB85C\\uBC8C \\uC0C1\\uD0DC\\uAD00\\uB9AC \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC\\uB97C \\uB300\\uCCB4\\uD560 \\uC218 \\uC5C6\\uACE0, \\uC5EC\\uC804\\uD788 \\uB9CE\\uC740 \\uB9AC\\uC561\\uD2B8 \\uAC1C\\uBC1C\\uC790\\uB4E4\\uC774 redux, mobx \\uB4F1\\uC744 \\uC0AC\\uC6A9\\uD558\\uACE0 \\uC788\\uB2E4.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tags":["Jotai","React","Recoil","context API","Redux"]}}]}},"pageContext":{"tag":"Redux"}},
    "staticQueryHashes": ["1957264973","5457840"]}