{
    "componentChunkName": "component---src-templates-post-list-by-tag-template-tsx",
    "path": "/tag/esbuild",
    "result": {"data":{"allMdx":{"nodes":[{"slug":"2021-05-26-webpack-vite","excerpt":"이런 제목을 어디서 본 것 같은데? 라고 생각한다면 정상이다.","frontmatter":{"title":"Webpack 보다 더 빠른 빌드툴, Vite","date":"2021-05-26T21:45:47+09:00","tags":["esbuild","Vite"],"excerpt":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uC774\\uB7F0 \\uC81C\\uBAA9\\uC744 \\uC5B4\\uB514\\uC11C \\uBCF8 \\uAC83 \\uAC19\\uC740\\uB370? \\uB77C\\uACE0 \\uC0DD\\uAC01\\uD55C\\uB2E4\\uBA74 \\uC815\\uC0C1\\uC774\\uB2E4.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"이런 제목을 어디서 본 것 같은데? 라고 생각한다면 정상이다."}}},{"slug":"2021-02-11-webpack-snowpack","excerpt":"스노우팩은 unbundled during development 즉 개발중에 번들링을 하지 않겠다는 컨셉의 프론트엔트 빌드툴이다.","frontmatter":{"title":"Webpack 보다 더 빠른 빌드툴, Snowpack","date":"2021-02-11T04:03:33+09:00","tags":["esbuild","Snowpack"],"excerpt":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uC2A4\\uB178\\uC6B0\\uD329\\uC740 unbundled during development \\uC989 \\uAC1C\\uBC1C\\uC911\\uC5D0 \\uBC88\\uB4E4\\uB9C1\\uC744 \\uD558\\uC9C0 \\uC54A\\uACA0\\uB2E4\\uB294 \\uCEE8\\uC149\\uC758 \\uD504\\uB860\\uD2B8\\uC5D4\\uD2B8 \\uBE4C\\uB4DC\\uD234\\uC774\\uB2E4.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"스노우팩은 unbundled during development 즉 개발중에 번들링을 하지 않겠다는 컨셉의 프론트엔트 빌드툴이다."}}}]}},"pageContext":{"tag":"esbuild"}},
    "staticQueryHashes": ["1957264973","5457840"]}