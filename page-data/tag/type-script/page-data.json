{
    "componentChunkName": "component---src-templates-post-list-by-tag-template-tsx",
    "path": "/tag/type-script",
    "result": {"data":{"allMarkdownRemark":{"nodes":[{"slug":"/post/2022-03-02-typescript-4.6","excerpt":"타입스크립트 4.4에 이어 더욱 강화된 제어 흐름 분석 (Control Flow Analysis) 기능이 마음에 들어서 쓰는 글으로, 이 외의 기능은 생략한다. 타입스크립트 4.6에는 이 외에도 생성자에서 super() 이전에 코드 사용을 허용하는 것, 향상된 재귀 …","frontmatter":{"title":"TypeScript 4.6에 추가된 기능","date":"2022-03-02T00:34:11+09:00","tags":["TypeScript"],"excerptAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"타입스크립트 4.6은 더욱더 강화된 제어 흐름 분석을 제공한다."}]}],"data":{"quirksMode":false}}}},{"slug":"/post/2022-02-04-enum-union-type","excerpt":"union type을 사용하는게 좋은 이유 enum을 쓰는 경우 이를 tsc로 트랜스파일링 후 rollup으로 번들링하면 아래와 같이 변환된다. union type을 쓰는 경우 이를 트랜스파일링 및 번들링 하면 아래와 같다. union type을 쓰는 경우 장점 js…","frontmatter":{"title":"enum 보다 union type을 사용하자","date":"2022-02-04T22:25:00+09:00","tags":["TypeScript","enum","union type"],"excerptAst":null}},{"slug":"/post/2021-08-28-typescript-4.4","excerpt":"정말 좋은 기능들이 추가되어서 정리해본다. alias 된 조건문과 판별문의 제어 흐름 분석 위의 케이스는 기존 타입스크립트에서도 정상적으로 인식했다. 그런데 이렇게 typeof arg === \"string\"을 alias 하는 경우 인식을 못했었다. 그런데 타입스크립트…","frontmatter":{"title":"TypeScript 4.4에 추가된 기능","date":"2021-08-28T14:31:28+09:00","tags":["TypeScript"],"excerptAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"정말 좋은 기능들이 추가되어서 정리해본다."}]}],"data":{"quirksMode":false}}}}]}},"pageContext":{"tag":"TypeScript"}},
    "staticQueryHashes": ["1957264973","5457840"]}