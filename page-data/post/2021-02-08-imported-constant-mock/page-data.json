{
    "componentChunkName": "component---src-templates-post-template-tsx",
    "path": "/post/2021-02-08-imported-constant-mock",
    "result": {"data":{"mdx":{"excerpt":"함수를 mock 하는 법은 많은데 의외로 import 된 상수를 mock 하는 방법을 찾기 어려웠다.\n (아니면 그냥 내가 검색을 못하는 걸 수도...) 예를 들면 아래와 같은 코드에서  modeToText  함수를 테스트 하는 경우  isProduction 를 mo…","frontmatter":{"title":"imported constant를 mock 하는 법","date":"2021-02-08T01:43:13+09:00","excerpt":null,"tags":["Jest","test"],"preview":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"imported constant를 mock 하는 법\",\n  \"date\": \"2021-02-08T01:43:13+09:00\",\n  \"tags\": [\"Jest\", \"test\"],\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uD568\\uC218\\uB97C mock \\uD558\\uB294 \\uBC95\\uC740 \\uB9CE\\uC740\\uB370 \\uC758\\uC678\\uB85C import \\uB41C \\uC0C1\\uC218\\uB97C mock \\uD558\\uB294 \\uBC29\\uBC95\\uC744 \\uCC3E\\uAE30 \\uC5B4\\uB824\\uC6E0\\uB2E4.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"del\", {\n    parentName: \"p\"\n  }, \"(\\uC544\\uB2C8\\uBA74 \\uADF8\\uB0E5 \\uB0B4\\uAC00 \\uAC80\\uC0C9\\uC744 \\uBABB\\uD558\\uB294 \\uAC78 \\uC218\\uB3C4...)\")), mdx(\"p\", null, \"\\uC608\\uB97C \\uB4E4\\uBA74 \\uC544\\uB798\\uC640 \\uAC19\\uC740 \\uCF54\\uB4DC\\uC5D0\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"modeToText\"), \" \\uD568\\uC218\\uB97C \\uD14C\\uC2A4\\uD2B8 \\uD558\\uB294 \\uACBD\\uC6B0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isProduction\"), \"\\uB97C mock \\uD574\\uC57C \\uD55C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"hljs language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-comment\"\n  }, \"// constants.ts\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-keyword\"\n  }, \"export\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-keyword\"\n  }, \"const\"), \" isProduction = \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-literal\"\n  }, \"true\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-comment\"\n  }, \"// utils.ts\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-keyword\"\n  }, \"import\"), \" { isProduction } \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-keyword\"\n  }, \"from\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-string\"\n  }, \"'./constants'\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-keyword\"\n  }, \"export\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-keyword\"\n  }, \"const\"), \" modeToText = \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-function\"\n  }, \"() =>\"), \" isProduction ? \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-string\"\n  }, \"'\\uC6B4\\uC601'\"), \" : \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-string\"\n  }, \"'\\uAC1C\\uBC1C'\"), \"\\n\")), mdx(\"p\", null, \"\\uC774 \\uACBD\\uC6B0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jest.requireMock\"), \"\\uC744 \\uC0AC\\uC6A9\\uD574\\uC11C \\uD14C\\uC2A4\\uD2B8\\uC5D0 \\uC131\\uACF5\\uD558\\uC600\\uB2E4. (\\uD14C\\uC2A4\\uD2B8\\uB97C \\uD14C\\uC2A4\\uD2B8\\uD558\\uB294 \\uB290\\uB08C^^!)\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"hljs language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-comment\"\n  }, \"// utils.test.ts\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-keyword\"\n  }, \"import\"), \" { modeToText } \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-keyword\"\n  }, \"from\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-string\"\n  }, \"'./utils'\"), \";\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-keyword\"\n  }, \"const\"), \" mockConstants = jest.requireMock(\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-string\"\n  }, \"'./constants'\"), \");\\njest.mock(\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-string\"\n  }, \"'./constants'\"), \");\\nafterAll(\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-function\"\n  }, \"() =>\"), \" {\\n  jest.resetModules();\\n});\\ndescribe(\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-string\"\n  }, \"'modeToText'\"), \", \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-function\"\n  }, \"() =>\"), \" {\\n  it(\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-string\"\n  }, \"'isProduction\\uC774 true\\uC77C\\uB54C \\uC6B4\\uC601\\uC744 \\uBC18\\uD658\\uD55C\\uB2E4.'\"), \", \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-function\"\n  }, \"() =>\"), \" {\\n    mockConstants.isProduction = \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-literal\"\n  }, \"true\"), \";\\n    expect(modeToText()).toBe(\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-string\"\n  }, \"'\\uC6B4\\uC601'\"), \");\\n  });\\n  it(\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-string\"\n  }, \"'isProduction\\uC774 false\\uC77C\\uB54C \\uAC1C\\uBC1C\\uC744 \\uBC18\\uD658\\uD55C\\uB2E4.'\"), \", \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-function\"\n  }, \"() =>\"), \" {\\n    mockConstants.isProduction = \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-literal\"\n  }, \"false\"), \";\\n    expect(modeToText()).toBe(\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-string\"\n  }, \"'\\uAC1C\\uBC1C'\"), \");\\n  });\\n});\\n\")), mdx(\"p\", null, \"\\uC544\\uB798\\uC640 \\uAC19\\uC740 \\uBC29\\uBC95\\uC740 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isProduction\"), \"\\uC774 read-only property\\uC774\\uAE30 \\uB54C\\uBB38\\uC5D0 ts\\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD55C\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"hljs language-js\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-keyword\"\n  }, \"import\"), \" * \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-keyword\"\n  }, \"as\"), \" constants \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-keyword\"\n  }, \"from\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-string\"\n  }, \"'./constants'\"), \";\\njest.mock(\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-string\"\n  }, \"'./constants'\"), \");\\n...\\nco\\nconstants.isProduction = \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"hljs-literal\"\n  }, \"true\"), \"; !!error!!\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"e93eac58-14c0-5c6b-8875-4ee2ceaf7f36","next":{"slug":"2021-02-11-webpack-snowpack","frontmatter":{"title":"Webpack 보다 더 빠른 빌드툴, Snowpack"}},"previous":null}},
    "staticQueryHashes": ["1598546928","1957264973","5457840"]}