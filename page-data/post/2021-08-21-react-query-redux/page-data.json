{
    "componentChunkName": "component---src-templates-post-template-tsx",
    "path": "/post/2021-08-21-react-query-redux",
    "result": {"data":{"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"react-query"}]},{"type":"text","value":"는 서버 상태를 다루는 라이브러리다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"redux"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"mobx"}]},{"type":"text","value":" 등은 클라이언트 상태를 다루는 라이브러리다."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"즉, "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"react-query"}]},{"type":"text","value":"는 전역 상태관리 라이브러리가 아니라 서버와 클라이언트 간의 비동기 작업을 쉽게 해주는 라이브러리다. 다만 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"react-query"}]},{"type":"text","value":"를 도입한다면 개발자가 전역적으로 관리해야하는 데이터는 매우 적을 것이다. 때문에 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"recoil"}]},{"type":"text","value":"이나 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"jotai"}]},{"type":"text","value":"같은 간소한 상태관리 라이브러리를 함께 사용하는 것도 좋은 방법이다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"예를 들면 과거 리액트 개발자들은 서버에서 데이터를 받아오는 작업을 리덕스에서 처리하기 위해 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"redux-thunk"}]},{"type":"text","value":", "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"redux-saga"}]},{"type":"text","value":" 등을 이용해서 비동기 작업을 수행하고 데이터를 리덕스 스토어에 저장한 뒤 그 데이터를 각 컴포넌트에서 사용했다."},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"react-query"}]},{"type":"text","value":"는 이 작업을 매우 간편하게 만들어주는데다가 데이터 캐싱을 아주 쉽게 해결할 수 있다. 쿼리에 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"staleTime: Infinity, cacheTime: Infinity"}]},{"type":"text","value":" 옵션만 추가하면 앱을 끄기 전까지 다시 fetch되지 않는 데이터로 만들 수 있다. 데이터가 처음 fetch되는 동안 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"isLoading"}]},{"type":"text","value":" 등의 상태를 직접 선언하고 조작할 필요도 없다. "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"react-query"}]},{"type":"text","value":"에서 모든 상태값과 메서드를 제공하기 때문이다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"물론 이러한 서버 데이터와 관계없이 전역적으로 다뤄야 하는 데이터들이 있다. 예를 들면 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"theme: 'light' | 'dark'"}]},{"type":"text","value":"를 저장하고 있는 전역 데이터는 클라이언트에서만 다루는 데이터다. 이러한 데이터는 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"react-query"}]},{"type":"text","value":"에 임의로 저장하고 다루는 것이 아니라 컨텍스트나 전역 상태관리 라이브러리를 사용해서 핸들링 해야 한다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"현재 가장 추천하는 조합은 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"react-query"}]},{"type":"text","value":" + "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"recoil"}]},{"type":"text","value":" 이다. context api가 가지고 있는 여러가지 이슈가 있기 때문에 전역 상태관리 라이브러리 하나는 사용을 해야 개발이 편한데, 성능 이슈 없이 간단하게 사용할 수 있기 때문에 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"recoil"}]},{"type":"text","value":"을 추천한다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"참고","style":"position:relative;"},"children":[{"type":"text","value":"참고"},{"type":"element","tagName":"a","properties":{"href":"#%EC%B0%B8%EA%B3%A0","ariaLabel":"참고 permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"xmlns":"http://www.w3.org/2000/svg","fill":"none","viewBox":"0 0 24 24","stroke":"currentColor"},"children":[{"type":"element","tagName":"path","properties":{"strokeLineCap":"round","strokeLineJoin":"round","strokeWidth":"2","d":"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://react-query.tanstack.com/guides/does-this-replace-client-state"},"children":[{"type":"text","value":"https://react-query.tanstack.com/guides/does-this-replace-client-state"}]}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"excerpt":"react-query는 서버 상태를 다루는 라이브러리다. redux, mobx 등은 클라이언트 상태를 다루는 라이브러리다. 즉, react-query는 전역 상태관리 라이브러리가 아니라 서버와 클라이언트 간의 비동기 작업을 쉽게 해주는 라이브러리다. 다만 react-…","frontmatter":{"title":"react-query가 redux같은 전역 상태관리 라이브러리를 대체할 수 있을까","date":"2021-08-21T18:05:04+09:00","tags":["React Query","Redux"],"excerpt":"`react-query`는 전역 상태관리 라이브러리가 아니라 서버와 클라이언트 간의 비동기 작업을 쉽게 해주는 라이브러리다.","preview":null}}},"pageContext":{"id":"33cdc59b-7ec6-5d3c-9ae9-d7ba6648d589","next":{"slug":"/post/2021-08-26-usememo","frontmatter":{"title":"간단한 연산에 useMemo 쓰지 말자"}},"previous":{"slug":"/post/2021-08-21-context-api-redux","frontmatter":{"title":"Context API가 존재하지만 여전히 사람들이 redux와 전역 상태관리 라이브러리를 쓰는 이유"}}}},
    "staticQueryHashes": ["1957264973","5457840"]}