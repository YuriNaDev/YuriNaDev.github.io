{"version":3,"file":"component---src-pages-archive-tsx-d9856e9141997cb219cf.js","mappings":"2NA6BA,EA1B4D,SAAC,GAGtD,IAFLA,EAEI,EAFJA,KACAC,EACI,EADJA,MAEA,OACE,4BACE,eAAIC,UAAU,2BAAd,SAA0CF,KAC1C,yBACGC,EAAME,KAAI,SAACC,GAAD,eACT,0BACE,UAAC,EAAAC,KAAD,CACEH,UAAU,yCACVI,GAAE,SAAWF,EAAKG,KAFpB,WAIE,iBAAML,UAAU,qCAAhB,UACGM,EAAAA,EAAAA,GAAO,IAAIC,KAAJ,UAASL,EAAKM,mBAAd,aAAS,EAAkBC,MAAO,aAE5C,iBAAMT,UAAU,YAAhB,mBAA6BE,EAAKM,mBAAlC,aAA6B,EAAkBE,YARzCR,EAAKG,e,8NCLzB,IAcA,EAdiD,SAAC,GAAoB,IAAlBM,EAAiB,EAAjBA,WAClD,OAA0B,IAAtBA,EAAWC,QACN,SAACC,EAAA,EAAD,KAIP,gBAAKb,UAAU,2BAAf,SACGW,EAAWV,KAAI,SAACa,GAAD,OACd,SAAC,E,qWAAD,IAAsCA,GAAhBA,EAAMhB,Y,mBCDpC,EATuD,SAAC,GAAc,IAAZiB,EAAW,EAAXA,KACxD,OACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAKP,MAAM,UAAUQ,SAAO,KAC5B,SAAC,EAAD,CAAaP,WAAYI,EAAKI,OAAOL","sources":["webpack://yrnana.github.io/./src/components/archive/ArchiveListItem.tsx","webpack://yrnana.github.io/./src/components/archive/ArchiveList.tsx","webpack://yrnana.github.io/./src/pages/archive.tsx"],"sourcesContent":["import { format } from 'date-fns';\nimport { graphql, Link } from 'gatsby';\n\nconst ArchiveListItem: React.VFC<ArchiveListItemFragment> = ({\n  year,\n  posts,\n}) => {\n  return (\n    <div>\n      <h3 className=\"text-xl font-medium mb-2\">{year}</h3>\n      <div>\n        {posts.map((post) => (\n          <div key={post.slug}>\n            <Link\n              className=\"inline-flex py-1 hover:text-purple-500\"\n              to={`/post/${post.slug}`}\n            >\n              <span className=\"flex-shrink-0 w-16 text-purple-500\">\n                {format(new Date(post.frontmatter?.date), 'MMM dd')}\n              </span>\n              <span className=\"break-all\">{post.frontmatter?.title}</span>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ArchiveListItem;\n\nexport const archiveListItemFragment = graphql`\n  fragment ArchiveListItem on MdxGroupConnection {\n    year: fieldValue\n    posts: nodes {\n      slug\n      frontmatter {\n        title\n        date\n      }\n    }\n  }\n`;\n","import NoData from '~/components/common/NoData';\nimport ArchiveListItem from './ArchiveListItem';\n\nexport interface ArchiveListProps {\n  postGroups: ArchiveListItemFragment[];\n}\n\nconst ArchiveList: React.VFC<ArchiveListProps> = ({ postGroups }) => {\n  if (postGroups.length === 0) {\n    return <NoData />;\n  }\n\n  return (\n    <div className=\"flex flex-col space-y-10\">\n      {postGroups.map((group) => (\n        <ArchiveListItem key={group.year} {...group} />\n      ))}\n    </div>\n  );\n};\n\nexport default ArchiveList;\n","import { graphql, PageProps } from 'gatsby';\nimport ArchiveList from '~/components/archive/ArchiveList';\nimport Seo from '~/components/common/Seo';\nimport Layout from '~/components/layout/Layout';\n\nconst ArchivePage: React.FC<PageProps<ArchiveQuery>> = ({ data }) => {\n  return (\n    <Layout>\n      <Seo title=\"archive\" noindex />\n      <ArchiveList postGroups={data.allMdx.group} />\n    </Layout>\n  );\n};\n\nexport default ArchivePage;\n\nexport const query = graphql`\n  query Archive {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fileAbsolutePath: { glob: \"**/_contents/posts/*\" }\n        frontmatter: { published: { eq: true } }\n      }\n    ) {\n      group(field: fields___year) {\n        ...ArchiveListItem\n      }\n    }\n  }\n`;\n"],"names":["year","posts","className","map","post","Link","to","slug","format","Date","frontmatter","date","title","postGroups","length","NoData","group","data","Layout","Seo","noindex","allMdx"],"sourceRoot":""}